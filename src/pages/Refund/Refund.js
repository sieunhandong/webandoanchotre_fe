import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  Container,
  Typography,
  Paper,
  Divider,
  Alert,
  Snackbar,
  Link,
  Box,
} from "@mui/material";
import LocalDiningIcon from "@mui/icons-material/LocalDining";
import ReportProblemIcon from "@mui/icons-material/ReportProblem";
import EmojiEmotionsIcon from "@mui/icons-material/EmojiEmotions";

const Refund = () => {
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const [openSnackbar, setOpenSnackbar] = useState(false);
  const navigate = useNavigate();

  const REFUND_DAYS_LIMIT = 2;

  const handleComplaintNavigation = (e) => {
    e.preventDefault();
    navigate("/user/complaint");
  };

  const renderRefundConditions = () => (
    <Paper
      elevation={3}
      sx={{
        p: 3,
        mb: 4,
        borderLeft: "6px solid #72CDF1",
        backgroundColor: "#f9fcff",
      }}
    >
      <Box display="flex" alignItems="center" mb={2}>
        <LocalDiningIcon sx={{ color: "#72CDF1", mr: 1 }} />
        <Typography variant="h6" fontWeight="bold" color="#2b2b2b">
          ƒêi·ªÅu Ki·ªán ƒê·ªïi Tr·∫£ & Ho√†n Ti·ªÅn
        </Typography>
      </Box>
      <Divider sx={{ mb: 2 }} />
      <Box component="ul" sx={{ pl: 3 }}>
        <Typography component="li" variant="body1" sx={{ mb: 1 }}>
          S·∫£n ph·∫©m ch·ªâ ƒë∆∞·ª£c ƒë·ªïi tr·∫£ khi{" "}
          <strong>sai s·∫£n ph·∫©m, l·ªói t·ª´ ph√≠a TinyYummy</strong> ho·∫∑c s·∫£n ph·∫©m b·ªã
          h∆∞ h·ªèng trong qu√° tr√¨nh v·∫≠n chuy·ªÉn.
        </Typography>
        <Typography component="li" variant="body1" sx={{ mb: 1 }}>
          Th·ªùi gian ti·∫øp nh·∫≠n y√™u c·∫ßu ƒë·ªïi tr·∫£ l√† trong v√≤ng{" "}
          <strong>{REFUND_DAYS_LIMIT} ng√†y</strong> k·ªÉ t·ª´ khi nh·∫≠n h√†ng.
        </Typography>
        <Typography component="li" variant="body1" sx={{ mb: 1 }}>
          S·∫£n ph·∫©m ƒë·ªïi tr·∫£ c·∫ßn c√≤n nguy√™n bao b√¨, tem nh√£n, ch∆∞a qua s·ª≠ d·ª•ng v√†
          c√≤n gi·ªØ h√≥a ƒë∆°n mua h√†ng.
        </Typography>
        <Typography component="li" variant="body1" sx={{ mb: 1 }}>
          C√°c s·∫£n ph·∫©m khuy·∫øn m√£i, gi·∫£m gi√° ho·∫∑c h√†ng d√πng th·ª≠{" "}
          <strong>kh√¥ng √°p d·ª•ng ƒë·ªïi tr·∫£</strong>.
        </Typography>
      </Box>
    </Paper>
  );

  const renderComplaintSection = () => (
    <Paper
      elevation={3}
      sx={{
        p: 3,
        backgroundColor: "#f0faff",
        borderLeft: "6px solid #72CDF1",
      }}
    >
      <Box display="flex" alignItems="center" mb={2}>
        <ReportProblemIcon sx={{ color: "#72CDF1", mr: 1 }} />
        <Typography variant="h6" fontWeight="bold" color="#2b2b2b">
          Khi·∫øu N·∫°i & Li√™n H·ªá H·ªó Tr·ª£
        </Typography>
      </Box>
      <Typography variant="body1" sx={{ color: "#555" }}>
        TinyYummy lu√¥n mong mu·ªën mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët nh·∫•t cho m·∫π v√† b√© üíï.
        N·∫øu c√≥ b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o li√™n quan ƒë·∫øn ƒë∆°n h√†ng ho·∫∑c ch·∫•t l∆∞·ª£ng s·∫£n
        ph·∫©m, m·∫π vui l√≤ng g·ª≠i y√™u c·∫ßu t·∫°i&nbsp;
        <Link
          component="button"
          onClick={handleComplaintNavigation}
          color="primary"
          underline="hover"
          sx={{ fontWeight: "bold", color: "#72CDF1" }}
        >
          trang khi·∫øu n·∫°i
        </Link>
        . Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng <strong>24 gi·ªù</strong> qua Zalo ho·∫∑c
        email c·ªßa m·∫π.
      </Typography>
      <Typography
        variant="body2"
        sx={{
          mt: 2,
          fontStyle: "italic",
          color: "#4a4a4a",
        }}
      >
        üå∏ M·∫π c√≥ th·ªÉ ch·ªß ƒë·ªông nh·∫Øn tin tr·ª±c ti·∫øp qua{" "}
        <strong>Zalo ho·∫∑c Facebook TinyYummy</strong> ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ s·ªõm nh·∫•t
        nh√©!
      </Typography>
    </Paper>
  );

  return (
    <Container maxWidth="md" sx={{ py: 5 }}>
      <Box display="flex" alignItems="center" justifyContent="center" mb={4}>
        <EmojiEmotionsIcon sx={{ color: "#72CDF1", fontSize: 40, mr: 1 }} />
        <Typography
          variant="h4"
          fontWeight="bold"
          textAlign="center"
          color="#2b2b2b"
        >
          Ch√≠nh S√°ch ƒê·ªïi Tr·∫£ & Khi·∫øu N·∫°i - TinyYummy
        </Typography>
      </Box>

      {renderRefundConditions()}
      {renderComplaintSection()}

      <Snackbar
        open={openSnackbar}
        autoHideDuration={6000}
        onClose={() => setOpenSnackbar(false)}
        anchorOrigin={{ vertical: "top", horizontal: "right" }}
      >
        <Alert
          onClose={() => setOpenSnackbar(false)}
          severity={error ? "error" : "success"}
          variant="filled"
          sx={{ bgcolor: "#72CDF1" }}
        >
          {error || success}
        </Alert>
      </Snackbar>
    </Container>
  );
};

export default Refund;
